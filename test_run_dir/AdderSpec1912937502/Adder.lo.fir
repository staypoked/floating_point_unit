circuit Adder :
  module Adder :
    input clock : Clock
    input reset : UInt<1>
    input io_a : UInt<32>
    input io_b : UInt<32>
    output io_c : UInt<32>

    node _T = bits(reset, 0, 0) @[Adder.scala 12:23]
    node _T_1 = eq(_T, UInt<1>("h0")) @[Adder.scala 12:23]
    node _T_2 = bits(io_a, 31, 31) @[Adder.scala 14:28]
    reg a_sign : UInt<1>, clock with :
      reset => (UInt<1>("h0"), a_sign) @[Adder.scala 14:23]
    node _T_3 = bits(io_a, 30, 24) @[Adder.scala 15:27]
    reg a_exp : UInt<7>, clock with :
      reset => (UInt<1>("h0"), a_exp) @[Adder.scala 15:22]
    node _T_4 = bits(io_a, 23, 0) @[Adder.scala 16:28]
    reg a_mant : UInt<24>, clock with :
      reset => (UInt<1>("h0"), a_mant) @[Adder.scala 16:23]
    node _T_5 = bits(io_b, 31, 31) @[Adder.scala 19:28]
    reg b_sign : UInt<1>, clock with :
      reset => (UInt<1>("h0"), b_sign) @[Adder.scala 19:23]
    node _T_6 = bits(io_b, 30, 24) @[Adder.scala 20:27]
    reg b_exp : UInt<7>, clock with :
      reset => (UInt<1>("h0"), b_exp) @[Adder.scala 20:22]
    node _T_7 = bits(io_b, 23, 0) @[Adder.scala 21:28]
    reg b_mant : UInt<24>, clock with :
      reset => (UInt<1>("h0"), b_mant) @[Adder.scala 21:23]
    node _T_8 = bits(reset, 0, 0) @[Adder.scala 24:23]
    node _T_9 = eq(_T_8, UInt<1>("h0")) @[Adder.scala 24:23]
    node _T_10 = bits(reset, 0, 0) @[Adder.scala 25:23]
    node _T_11 = eq(_T_10, UInt<1>("h0")) @[Adder.scala 25:23]
    reg tmp_sign : UInt<1>, clock with :
      reset => (UInt<1>("h0"), tmp_sign) @[Adder.scala 29:25]
    reg tmp_exp : UInt<7>, clock with :
      reset => (UInt<1>("h0"), tmp_exp) @[Adder.scala 30:24]
    reg tmp_mant : UInt<24>, clock with :
      reset => (UInt<1>("h0"), tmp_mant) @[Adder.scala 31:25]
    reg check_underflow : UInt<1>, clock with :
      reset => (UInt<1>("h0"), check_underflow) @[Adder.scala 33:32]
    reg check_overflow : UInt<1>, clock with :
      reset => (UInt<1>("h0"), check_overflow) @[Adder.scala 34:31]
    node _T_12 = bits(reset, 0, 0) @[Adder.scala 56:23]
    node _T_13 = eq(_T_12, UInt<1>("h0")) @[Adder.scala 56:23]
    node _T_14 = bits(reset, 0, 0) @[Adder.scala 57:23]
    node _T_15 = eq(_T_14, UInt<1>("h0")) @[Adder.scala 57:23]
    node _T_16 = bits(reset, 0, 0) @[Adder.scala 58:23]
    node _T_17 = eq(_T_16, UInt<1>("h0")) @[Adder.scala 58:23]
    reg opcode : UInt<2>, clock with :
      reset => (UInt<1>("h0"), opcode) @[Adder.scala 63:23]
    node _T_18 = eq(a_exp, b_exp) @[Adder.scala 65:15]
    node _T_19 = eq(a_sign, UInt<1>("h0")) @[Adder.scala 66:10]
    node _T_20 = eq(b_sign, UInt<1>("h0")) @[Adder.scala 67:12]
    node _T_21 = add(a_mant, b_mant) @[Adder.scala 70:28]
    node _T_22 = tail(_T_21, 1) @[Adder.scala 70:28]
    node _T_23 = bits(reset, 0, 0) @[Adder.scala 71:29]
    node _T_24 = eq(_T_23, UInt<1>("h0")) @[Adder.scala 71:29]
    node _T_25 = geq(a_mant, b_mant) @[Adder.scala 76:21]
    node _GEN_0 = mux(_T_25, a_sign, b_sign) @[Adder.scala 76:32 Adder.scala 77:20 Adder.scala 79:20]
    node _T_26 = sub(a_mant, b_mant) @[Adder.scala 81:28]
    node _T_27 = tail(_T_26, 1) @[Adder.scala 81:28]
    node _GEN_1 = mux(_T_20, UInt<1>("h0"), _GEN_0) @[Adder.scala 67:21 Adder.scala 69:18]
    node _GEN_2 = mux(_T_20, _T_22, _T_27) @[Adder.scala 67:21 Adder.scala 70:18 Adder.scala 81:18]
    node _GEN_3 = mux(_T_20, UInt<1>("h1"), UInt<2>("h2")) @[Adder.scala 67:21 Adder.scala 72:16 Adder.scala 82:16]
    node _T_28 = eq(b_sign, UInt<1>("h0")) @[Adder.scala 85:12]
    node _T_29 = gt(a_mant, b_mant) @[Adder.scala 87:21]
    node _GEN_4 = mux(_T_29, a_sign, b_sign) @[Adder.scala 87:31 Adder.scala 88:20 Adder.scala 90:20]
    node _T_30 = sub(b_mant, a_mant) @[Adder.scala 92:28]
    node _T_31 = tail(_T_30, 1) @[Adder.scala 92:28]
    node _T_32 = add(a_mant, b_mant) @[Adder.scala 98:28]
    node _T_33 = tail(_T_32, 1) @[Adder.scala 98:28]
    node _GEN_5 = mux(_T_28, _GEN_4, a_sign) @[Adder.scala 85:21 Adder.scala 97:18]
    node _GEN_6 = mux(_T_28, _T_31, _T_33) @[Adder.scala 85:21 Adder.scala 92:18 Adder.scala 98:18]
    node _GEN_7 = mux(_T_28, UInt<2>("h2"), UInt<1>("h1")) @[Adder.scala 85:21 Adder.scala 93:16 Adder.scala 99:16]
    node _GEN_8 = mux(_T_19, _GEN_1, _GEN_5) @[Adder.scala 66:19]
    node _GEN_9 = mux(_T_19, _GEN_2, _GEN_6) @[Adder.scala 66:19]
    node _GEN_10 = mux(_T_19, _GEN_3, _GEN_7) @[Adder.scala 66:19]
    node _T_34 = bits(reset, 0, 0) @[Adder.scala 103:25]
    node _T_35 = eq(_T_34, UInt<1>("h0")) @[Adder.scala 103:25]
    node _T_36 = eq(UInt<1>("h1"), opcode) @[Conditional.scala 37:30]
    node _T_37 = gt(a_mant, b_mant) @[Adder.scala 108:21]
    node _T_38 = lt(tmp_mant, a_mant) @[Adder.scala 109:25]
    node _GEN_11 = mux(_T_38, UInt<1>("h1"), UInt<1>("h0")) @[Adder.scala 109:35 Adder.scala 110:28 Adder.scala 34:31]
    node _T_39 = lt(tmp_mant, b_mant) @[Adder.scala 113:25]
    node _GEN_12 = mux(_T_39, UInt<1>("h1"), UInt<1>("h0")) @[Adder.scala 113:35 Adder.scala 114:28 Adder.scala 34:31]
    node _GEN_13 = mux(_T_37, _GEN_11, _GEN_12) @[Adder.scala 108:31]
    node _T_40 = eq(UInt<2>("h2"), opcode) @[Conditional.scala 37:30]
    node _T_41 = gt(a_mant, b_mant) @[Adder.scala 120:21]
    node _T_42 = gt(tmp_mant, a_mant) @[Adder.scala 121:25]
    node _GEN_14 = mux(_T_42, UInt<1>("h1"), UInt<1>("h0")) @[Adder.scala 121:35 Adder.scala 122:29 Adder.scala 33:32]
    node _T_43 = gt(tmp_mant, b_mant) @[Adder.scala 125:25]
    node _GEN_15 = mux(_T_43, UInt<1>("h1"), UInt<1>("h0")) @[Adder.scala 125:35 Adder.scala 126:29 Adder.scala 33:32]
    node _GEN_16 = mux(_T_41, _GEN_14, _GEN_15) @[Adder.scala 120:31]
    node _GEN_17 = mux(_T_40, _GEN_16, UInt<1>("h0")) @[Conditional.scala 39:67 Adder.scala 33:32]
    node _GEN_18 = mux(_T_36, _GEN_13, UInt<1>("h0")) @[Conditional.scala 40:58 Adder.scala 34:31]
    node _GEN_19 = mux(_T_36, UInt<1>("h0"), _GEN_17) @[Conditional.scala 40:58 Adder.scala 33:32]
    node _GEN_20 = mux(_T_18, _GEN_8, UInt<1>("h0")) @[Adder.scala 65:26 Adder.scala 29:25]
    node _GEN_21 = mux(_T_18, _GEN_9, UInt<24>("h0")) @[Adder.scala 65:26 Adder.scala 31:25]
    node _GEN_22 = mux(_T_18, _GEN_10, UInt<1>("h0")) @[Adder.scala 65:26 Adder.scala 63:23]
    node _GEN_23 = mux(_T_18, _GEN_18, UInt<1>("h0")) @[Adder.scala 65:26 Adder.scala 34:31]
    node _GEN_24 = mux(_T_18, _GEN_19, UInt<1>("h0")) @[Adder.scala 65:26 Adder.scala 33:32]
    node hi = cat(tmp_sign, tmp_exp) @[Cat.scala 30:58]
    node _T_44 = cat(hi, tmp_mant) @[Cat.scala 30:58]
    node _T_45 = bits(reset, 0, 0) @[Adder.scala 134:23]
    node _T_46 = eq(_T_45, UInt<1>("h0")) @[Adder.scala 134:23]
    node hi_1 = cat(tmp_sign, tmp_exp) @[Cat.scala 30:58]
    node _T_47 = cat(hi_1, tmp_mant) @[Cat.scala 30:58]
    io_c <= _T_47 @[Adder.scala 135:8]
    a_sign <= mux(reset, UInt<1>("h0"), _T_2) @[Adder.scala 14:23 Adder.scala 14:23 Adder.scala 14:23]
    a_exp <= mux(reset, UInt<1>("h0"), _T_3) @[Adder.scala 15:22 Adder.scala 15:22 Adder.scala 15:22]
    a_mant <= mux(reset, UInt<1>("h0"), _T_4) @[Adder.scala 16:23 Adder.scala 16:23 Adder.scala 16:23]
    b_sign <= mux(reset, UInt<1>("h0"), _T_5) @[Adder.scala 19:23 Adder.scala 19:23 Adder.scala 19:23]
    b_exp <= mux(reset, UInt<1>("h0"), _T_6) @[Adder.scala 20:22 Adder.scala 20:22 Adder.scala 20:22]
    b_mant <= mux(reset, UInt<1>("h0"), _T_7) @[Adder.scala 21:23 Adder.scala 21:23 Adder.scala 21:23]
    tmp_sign <= mux(reset, UInt<1>("h0"), _GEN_20) @[Adder.scala 29:25 Adder.scala 29:25]
    tmp_exp <= mux(reset, UInt<1>("h0"), a_exp) @[Adder.scala 30:24 Adder.scala 30:24 Adder.scala 62:11]
    tmp_mant <= mux(reset, UInt<1>("h0"), _GEN_21) @[Adder.scala 31:25 Adder.scala 31:25]
    check_underflow <= _GEN_24
    check_overflow <= _GEN_23
    opcode <= _GEN_22
    printf(clock, and(and(UInt<1>("h1"), _T_1), UInt<1>("h1")), "a_val: %b, b_val: %b\n", io_a, io_b) @[Adder.scala 12:23]
    printf(clock, and(and(UInt<1>("h1"), _T_9), UInt<1>("h1")), "a_sign: %d, a_exp: %b, a_mant: %b\n", a_sign, a_exp, a_mant) @[Adder.scala 24:23]
    printf(clock, and(and(UInt<1>("h1"), _T_11), UInt<1>("h1")), "b_sign: %d, b_exp: %b, b_mant: %b\n", b_sign, b_exp, b_mant) @[Adder.scala 25:23]
    printf(clock, and(and(UInt<1>("h1"), _T_13), UInt<1>("h1")), "a_sign: %d, a_exp: %d, a_mant: %d\n", a_sign, a_exp, a_mant) @[Adder.scala 56:23]
    printf(clock, and(and(UInt<1>("h1"), _T_15), UInt<1>("h1")), "b_sign: %d, b_exp: %d, b_mant: %d\n", b_sign, b_exp, b_mant) @[Adder.scala 57:23]
    printf(clock, and(and(UInt<1>("h1"), _T_17), UInt<1>("h1")), "tmp_sign: %d, tmp_exp: %d, tmp_mant: %d\n", tmp_sign, tmp_exp, tmp_mant) @[Adder.scala 58:23]
    printf(clock, and(and(and(and(and(UInt<1>("h1"), _T_18), _T_19), _T_20), _T_24), UInt<1>("h1")), "tmp_sign: %d, tmp_exp: %d, tmp_mant: %d\n", tmp_sign, tmp_exp, tmp_mant) @[Adder.scala 71:29]
    printf(clock, and(and(and(UInt<1>("h1"), _T_18), _T_35), UInt<1>("h1")), "tmp_sign: %d, tmp_exp: %d, tmp_mant: %d\n", tmp_sign, tmp_exp, tmp_mant) @[Adder.scala 103:25]
    printf(clock, and(and(UInt<1>("h1"), _T_46), UInt<1>("h1")), "io_c: %b\n", _T_44) @[Adder.scala 134:23]