;buildInfoPackage: chisel3, version: 3.4.1, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit Adder : 
  module Adder : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<32>, flip b : UInt<32>, c : UInt<32>}
    
    node _T = bits(reset, 0, 0) @[Adder.scala 12:23]
    node _T_1 = eq(_T, UInt<1>("h00")) @[Adder.scala 12:23]
    when _T_1 : @[Adder.scala 12:23]
      printf(clock, UInt<1>(1), "a_val: %b, b_val: %b\n", io.a, io.b) @[Adder.scala 12:23]
      skip @[Adder.scala 12:23]
    node _T_2 = bits(io.a, 31, 31) @[Adder.scala 14:28]
    reg a_sign : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Adder.scala 14:23]
    a_sign <= _T_2 @[Adder.scala 14:23]
    node _T_3 = bits(io.a, 30, 23) @[Adder.scala 15:27]
    reg a_exp : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[Adder.scala 15:22]
    a_exp <= _T_3 @[Adder.scala 15:22]
    node _T_4 = bits(io.a, 22, 0) @[Adder.scala 16:28]
    reg a_mant : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[Adder.scala 16:23]
    a_mant <= _T_4 @[Adder.scala 16:23]
    node _T_5 = bits(io.b, 31, 31) @[Adder.scala 19:28]
    reg b_sign : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Adder.scala 19:23]
    b_sign <= _T_5 @[Adder.scala 19:23]
    node _T_6 = bits(io.b, 30, 23) @[Adder.scala 20:27]
    reg b_exp : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[Adder.scala 20:22]
    b_exp <= _T_6 @[Adder.scala 20:22]
    node _T_7 = bits(io.b, 22, 0) @[Adder.scala 21:28]
    reg b_mant : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[Adder.scala 21:23]
    b_mant <= _T_7 @[Adder.scala 21:23]
    node _T_8 = bits(reset, 0, 0) @[Adder.scala 24:23]
    node _T_9 = eq(_T_8, UInt<1>("h00")) @[Adder.scala 24:23]
    when _T_9 : @[Adder.scala 24:23]
      printf(clock, UInt<1>(1), "a_sign: %d, a_exp: %b, a_mant: %b\n", a_sign, a_exp, a_mant) @[Adder.scala 24:23]
      skip @[Adder.scala 24:23]
    node _T_10 = bits(reset, 0, 0) @[Adder.scala 25:23]
    node _T_11 = eq(_T_10, UInt<1>("h00")) @[Adder.scala 25:23]
    when _T_11 : @[Adder.scala 25:23]
      printf(clock, UInt<1>(1), "b_sign: %d, b_exp: %b, b_mant: %b\n", b_sign, b_exp, b_mant) @[Adder.scala 25:23]
      skip @[Adder.scala 25:23]
    reg tmp_sign : UInt, clock @[Adder.scala 29:25]
    tmp_sign <= UInt<1>("h00") @[Adder.scala 29:25]
    reg tmp_exp : UInt, clock @[Adder.scala 30:24]
    tmp_exp <= UInt<8>("h00") @[Adder.scala 30:24]
    reg tmp_mant : UInt, clock @[Adder.scala 31:25]
    tmp_mant <= UInt<23>("h00") @[Adder.scala 31:25]
    reg check_underflow : UInt<1>, clock @[Adder.scala 33:32]
    check_underflow <= UInt<1>("h00") @[Adder.scala 33:32]
    reg check_overflow : UInt<1>, clock @[Adder.scala 34:31]
    check_overflow <= UInt<1>("h00") @[Adder.scala 34:31]
    node _T_12 = gt(a_exp, b_exp) @[Adder.scala 42:14]
    when _T_12 : @[Adder.scala 42:22]
      node _T_13 = dshl(b_exp, UInt<1>("h01")) @[Adder.scala 45:29]
      reg REG : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[Adder.scala 46:23]
      REG <= _T_13 @[Adder.scala 46:23]
      b_exp <= REG @[Adder.scala 47:11]
      node _T_14 = dshr(b_mant, UInt<1>("h01")) @[Adder.scala 49:23]
      b_mant <= _T_14 @[Adder.scala 49:12]
      node _T_15 = bits(reset, 0, 0) @[Adder.scala 50:25]
      node _T_16 = eq(_T_15, UInt<1>("h00")) @[Adder.scala 50:25]
      when _T_16 : @[Adder.scala 50:25]
        printf(clock, UInt<1>(1), "b_exp: %d, shift: %d\n", b_exp, _T_13) @[Adder.scala 50:25]
        skip @[Adder.scala 50:25]
      skip @[Adder.scala 42:22]
    else : @[Adder.scala 51:29]
      node _T_17 = lt(a_exp, b_exp) @[Adder.scala 51:20]
      when _T_17 : @[Adder.scala 51:29]
        node _T_18 = dshl(a_exp, UInt<1>("h01")) @[Adder.scala 52:29]
        reg REG_1 : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[Adder.scala 53:23]
        REG_1 <= _T_18 @[Adder.scala 53:23]
        a_exp <= REG_1 @[Adder.scala 54:11]
        node _T_19 = dshr(a_mant, UInt<1>("h01")) @[Adder.scala 56:23]
        a_mant <= _T_19 @[Adder.scala 56:12]
        node _T_20 = bits(reset, 0, 0) @[Adder.scala 57:25]
        node _T_21 = eq(_T_20, UInt<1>("h00")) @[Adder.scala 57:25]
        when _T_21 : @[Adder.scala 57:25]
          printf(clock, UInt<1>(1), "a_exp: %d, shift: %d\n", a_exp, _T_18) @[Adder.scala 57:25]
          skip @[Adder.scala 57:25]
        skip @[Adder.scala 51:29]
    node _T_22 = bits(reset, 0, 0) @[Adder.scala 60:23]
    node _T_23 = eq(_T_22, UInt<1>("h00")) @[Adder.scala 60:23]
    when _T_23 : @[Adder.scala 60:23]
      printf(clock, UInt<1>(1), "a_sign: %d, a_exp: %d, a_mant: %d\n", a_sign, a_exp, a_mant) @[Adder.scala 60:23]
      skip @[Adder.scala 60:23]
    node _T_24 = bits(reset, 0, 0) @[Adder.scala 61:23]
    node _T_25 = eq(_T_24, UInt<1>("h00")) @[Adder.scala 61:23]
    when _T_25 : @[Adder.scala 61:23]
      printf(clock, UInt<1>(1), "b_sign: %d, b_exp: %d, b_mant: %d\n", b_sign, b_exp, b_mant) @[Adder.scala 61:23]
      skip @[Adder.scala 61:23]
    node _T_26 = bits(reset, 0, 0) @[Adder.scala 62:23]
    node _T_27 = eq(_T_26, UInt<1>("h00")) @[Adder.scala 62:23]
    when _T_27 : @[Adder.scala 62:23]
      printf(clock, UInt<1>(1), "tmp_sign: %d, tmp_exp: %d, tmp_mant: %d\n", tmp_sign, tmp_exp, tmp_mant) @[Adder.scala 62:23]
      skip @[Adder.scala 62:23]
    node _T_28 = eq(a_exp, b_exp) @[Adder.scala 66:15]
    when _T_28 : @[Adder.scala 66:26]
      tmp_exp <= a_exp @[Adder.scala 67:13]
      reg REG_2 : UInt, clock @[Adder.scala 68:25]
      REG_2 <= UInt<1>("h00") @[Adder.scala 68:25]
      node _T_29 = eq(a_sign, UInt<1>("h00")) @[Adder.scala 70:10]
      when _T_29 : @[Adder.scala 70:19]
        node _T_30 = eq(b_sign, UInt<1>("h00")) @[Adder.scala 71:12]
        when _T_30 : @[Adder.scala 71:21]
          tmp_sign <= UInt<1>("h00") @[Adder.scala 73:18]
          node _T_31 = add(a_mant, b_mant) @[Adder.scala 74:28]
          node _T_32 = tail(_T_31, 1) @[Adder.scala 74:28]
          tmp_mant <= _T_32 @[Adder.scala 74:18]
          node _T_33 = bits(reset, 0, 0) @[Adder.scala 75:29]
          node _T_34 = eq(_T_33, UInt<1>("h00")) @[Adder.scala 75:29]
          when _T_34 : @[Adder.scala 75:29]
            printf(clock, UInt<1>(1), "tmp_sign: %d, tmp_exp: %d, tmp_mant: %d\n", tmp_sign, tmp_exp, tmp_mant) @[Adder.scala 75:29]
            skip @[Adder.scala 75:29]
          REG_2 <= UInt<1>("h01") @[Adder.scala 76:16]
          skip @[Adder.scala 71:21]
        else : @[Adder.scala 78:19]
          node _T_35 = geq(a_mant, b_mant) @[Adder.scala 80:21]
          when _T_35 : @[Adder.scala 80:32]
            tmp_sign <= a_sign @[Adder.scala 81:20]
            skip @[Adder.scala 80:32]
          else : @[Adder.scala 82:21]
            tmp_sign <= b_sign @[Adder.scala 83:20]
            skip @[Adder.scala 82:21]
          node _T_36 = sub(a_mant, b_mant) @[Adder.scala 85:28]
          node _T_37 = tail(_T_36, 1) @[Adder.scala 85:28]
          tmp_mant <= _T_37 @[Adder.scala 85:18]
          REG_2 <= UInt<2>("h02") @[Adder.scala 86:16]
          skip @[Adder.scala 78:19]
        skip @[Adder.scala 70:19]
      else : @[Adder.scala 88:17]
        node _T_38 = eq(b_sign, UInt<1>("h00")) @[Adder.scala 89:12]
        when _T_38 : @[Adder.scala 89:21]
          node _T_39 = gt(a_mant, b_mant) @[Adder.scala 91:21]
          when _T_39 : @[Adder.scala 91:31]
            tmp_sign <= a_sign @[Adder.scala 92:20]
            skip @[Adder.scala 91:31]
          else : @[Adder.scala 93:21]
            tmp_sign <= b_sign @[Adder.scala 94:20]
            skip @[Adder.scala 93:21]
          node _T_40 = sub(b_mant, a_mant) @[Adder.scala 96:28]
          node _T_41 = tail(_T_40, 1) @[Adder.scala 96:28]
          tmp_mant <= _T_41 @[Adder.scala 96:18]
          REG_2 <= UInt<2>("h02") @[Adder.scala 97:16]
          skip @[Adder.scala 89:21]
        else : @[Adder.scala 99:19]
          tmp_sign <= a_sign @[Adder.scala 101:18]
          node _T_42 = add(a_mant, b_mant) @[Adder.scala 102:28]
          node _T_43 = tail(_T_42, 1) @[Adder.scala 102:28]
          tmp_mant <= _T_43 @[Adder.scala 102:18]
          REG_2 <= UInt<1>("h01") @[Adder.scala 103:16]
          skip @[Adder.scala 99:19]
        skip @[Adder.scala 88:17]
      node _T_44 = bits(reset, 0, 0) @[Adder.scala 107:25]
      node _T_45 = eq(_T_44, UInt<1>("h00")) @[Adder.scala 107:25]
      when _T_45 : @[Adder.scala 107:25]
        printf(clock, UInt<1>(1), "tmp_sign: %d, tmp_exp: %d, tmp_mant: %d\n", tmp_sign, tmp_exp, tmp_mant) @[Adder.scala 107:25]
        skip @[Adder.scala 107:25]
      node _T_46 = eq(UInt<1>("h01"), REG_2) @[Conditional.scala 37:30]
      when _T_46 : @[Conditional.scala 40:58]
        node _T_47 = gt(a_mant, b_mant) @[Adder.scala 112:21]
        when _T_47 : @[Adder.scala 112:31]
          node _T_48 = lt(tmp_mant, a_mant) @[Adder.scala 113:25]
          when _T_48 : @[Adder.scala 113:35]
            check_overflow <= UInt<1>("h01") @[Adder.scala 114:28]
            skip @[Adder.scala 113:35]
          skip @[Adder.scala 112:31]
        else : @[Adder.scala 116:21]
          node _T_49 = lt(tmp_mant, b_mant) @[Adder.scala 117:25]
          when _T_49 : @[Adder.scala 117:35]
            check_overflow <= UInt<1>("h01") @[Adder.scala 118:28]
            skip @[Adder.scala 117:35]
          skip @[Adder.scala 116:21]
        skip @[Conditional.scala 40:58]
      else : @[Conditional.scala 39:67]
        node _T_50 = eq(UInt<2>("h02"), REG_2) @[Conditional.scala 37:30]
        when _T_50 : @[Conditional.scala 39:67]
          node _T_51 = gt(a_mant, b_mant) @[Adder.scala 124:21]
          when _T_51 : @[Adder.scala 124:31]
            node _T_52 = gt(tmp_mant, a_mant) @[Adder.scala 125:25]
            when _T_52 : @[Adder.scala 125:35]
              check_underflow <= UInt<1>("h01") @[Adder.scala 126:29]
              skip @[Adder.scala 125:35]
            skip @[Adder.scala 124:31]
          else : @[Adder.scala 128:21]
            node _T_53 = gt(tmp_mant, b_mant) @[Adder.scala 129:25]
            when _T_53 : @[Adder.scala 129:35]
              check_underflow <= UInt<1>("h01") @[Adder.scala 130:29]
              skip @[Adder.scala 129:35]
            skip @[Adder.scala 128:21]
          skip @[Conditional.scala 39:67]
      skip @[Adder.scala 66:26]
    node hi = cat(tmp_sign, tmp_exp) @[Cat.scala 30:58]
    node _T_54 = cat(hi, tmp_mant) @[Cat.scala 30:58]
    node _T_55 = bits(reset, 0, 0) @[Adder.scala 138:23]
    node _T_56 = eq(_T_55, UInt<1>("h00")) @[Adder.scala 138:23]
    when _T_56 : @[Adder.scala 138:23]
      printf(clock, UInt<1>(1), "io_c: %b\n", _T_54) @[Adder.scala 138:23]
      skip @[Adder.scala 138:23]
    node hi_1 = cat(tmp_sign, tmp_exp) @[Cat.scala 30:58]
    node _T_57 = cat(hi_1, tmp_mant) @[Cat.scala 30:58]
    io.c <= _T_57 @[Adder.scala 139:8]
    
